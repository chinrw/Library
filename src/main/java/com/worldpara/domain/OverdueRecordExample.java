package com.worldpara.domain;

import java.util.ArrayList;
import java.util.List;

public class OverdueRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public OverdueRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOverdueIdIsNull() {
            addCriterion("overdue_id is null");
            return (Criteria) this;
        }

        public Criteria andOverdueIdIsNotNull() {
            addCriterion("overdue_id is not null");
            return (Criteria) this;
        }

        public Criteria andOverdueIdEqualTo(Integer value) {
            addCriterion("overdue_id =", value, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdNotEqualTo(Integer value) {
            addCriterion("overdue_id <>", value, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdGreaterThan(Integer value) {
            addCriterion("overdue_id >", value, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("overdue_id >=", value, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdLessThan(Integer value) {
            addCriterion("overdue_id <", value, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdLessThanOrEqualTo(Integer value) {
            addCriterion("overdue_id <=", value, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdIn(List<Integer> values) {
            addCriterion("overdue_id in", values, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdNotIn(List<Integer> values) {
            addCriterion("overdue_id not in", values, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdBetween(Integer value1, Integer value2) {
            addCriterion("overdue_id between", value1, value2, "overdueId");
            return (Criteria) this;
        }

        public Criteria andOverdueIdNotBetween(Integer value1, Integer value2) {
            addCriterion("overdue_id not between", value1, value2, "overdueId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdIsNull() {
            addCriterion("borrow_id is null");
            return (Criteria) this;
        }

        public Criteria andBorrowIdIsNotNull() {
            addCriterion("borrow_id is not null");
            return (Criteria) this;
        }

        public Criteria andBorrowIdEqualTo(Integer value) {
            addCriterion("borrow_id =", value, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdNotEqualTo(Integer value) {
            addCriterion("borrow_id <>", value, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdGreaterThan(Integer value) {
            addCriterion("borrow_id >", value, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("borrow_id >=", value, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdLessThan(Integer value) {
            addCriterion("borrow_id <", value, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdLessThanOrEqualTo(Integer value) {
            addCriterion("borrow_id <=", value, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdIn(List<Integer> values) {
            addCriterion("borrow_id in", values, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdNotIn(List<Integer> values) {
            addCriterion("borrow_id not in", values, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdBetween(Integer value1, Integer value2) {
            addCriterion("borrow_id between", value1, value2, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBorrowIdNotBetween(Integer value1, Integer value2) {
            addCriterion("borrow_id not between", value1, value2, "borrowId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdIsNull() {
            addCriterion("bookitem_id is null");
            return (Criteria) this;
        }

        public Criteria andBookitemIdIsNotNull() {
            addCriterion("bookitem_id is not null");
            return (Criteria) this;
        }

        public Criteria andBookitemIdEqualTo(Integer value) {
            addCriterion("bookitem_id =", value, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdNotEqualTo(Integer value) {
            addCriterion("bookitem_id <>", value, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdGreaterThan(Integer value) {
            addCriterion("bookitem_id >", value, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("bookitem_id >=", value, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdLessThan(Integer value) {
            addCriterion("bookitem_id <", value, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdLessThanOrEqualTo(Integer value) {
            addCriterion("bookitem_id <=", value, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdIn(List<Integer> values) {
            addCriterion("bookitem_id in", values, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdNotIn(List<Integer> values) {
            addCriterion("bookitem_id not in", values, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdBetween(Integer value1, Integer value2) {
            addCriterion("bookitem_id between", value1, value2, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andBookitemIdNotBetween(Integer value1, Integer value2) {
            addCriterion("bookitem_id not between", value1, value2, "bookitemId");
            return (Criteria) this;
        }

        public Criteria andPassDaysIsNull() {
            addCriterion("pass_days is null");
            return (Criteria) this;
        }

        public Criteria andPassDaysIsNotNull() {
            addCriterion("pass_days is not null");
            return (Criteria) this;
        }

        public Criteria andPassDaysEqualTo(Integer value) {
            addCriterion("pass_days =", value, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysNotEqualTo(Integer value) {
            addCriterion("pass_days <>", value, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysGreaterThan(Integer value) {
            addCriterion("pass_days >", value, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("pass_days >=", value, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysLessThan(Integer value) {
            addCriterion("pass_days <", value, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysLessThanOrEqualTo(Integer value) {
            addCriterion("pass_days <=", value, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysIn(List<Integer> values) {
            addCriterion("pass_days in", values, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysNotIn(List<Integer> values) {
            addCriterion("pass_days not in", values, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysBetween(Integer value1, Integer value2) {
            addCriterion("pass_days between", value1, value2, "passDays");
            return (Criteria) this;
        }

        public Criteria andPassDaysNotBetween(Integer value1, Integer value2) {
            addCriterion("pass_days not between", value1, value2, "passDays");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table overdue_record
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table overdue_record
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}